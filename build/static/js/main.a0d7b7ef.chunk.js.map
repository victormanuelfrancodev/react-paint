{"version":3,"sources":["logo.svg","componentes/Rectangulo.js","componentes/Circulo.js","componentes/Texto.js","componentes/Flecha.js","componentes/Triangulo.js","componentes/TransformerComponent.js","componentes/Mundo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Rectangulo","react_default","a","createElement","ReactKonva","name","this","props","x","y","width","height","fill","draggable","React","Component","Circulo","radius","Texto","fontSize","text","texto","fontFamily","Flecha","points","pointerLength","pointerWidth","stroke","tension","Triangulo","sides","strokeWidth","TransformerComponent","checkNode","selectedShapeName","trim","transformer","detach","getLayer","batchDraw","console","log","stage","getStage","selectedShape","selectedNode","findOne","node","attachTo","_this","ref","IconoFlecha","_useImage","useImage","image","Object","slicedToArray","id","IconoLapiz","_useImage3","IconoLinea","_useImage5","IconoCuadrado","_useImage7","IconoTriangulo","_useImage9","IconoCirculo","_useImage11","IconoGoma","_useImage13","IconoPintar","_useImage15","IconoLetra","_useImage17","IconoVolver","_useImage19","Mundo","handleStageMouseDown","e","isMakingLine","target","selectShapeName","clickedOnTransformer","getParent","className","selectedColor","resetColor","concat","toConsumableArray","rects","circulos","textos","flechas","triangulos","find","shape","insertarRectangulo","insertarTriangulo","insertarCirculo","insertarText","insertarFlecha","changeColor","counter","countClick","aumentarClick","firstPos","getPointerPosition","secondPos","insertArrowWithTwoPositions","class","onMouseDown","Array","from","map","rect","i","componentes_Rectangulo","assign","key","cir","componentes_Circulo","txt","componentes_Texto","arr","componentes_Flecha","tri","componentes_Triangulo","Mundo_IconoFlecha","Mundo_IconoLapiz","Mundo_IconoLinea","Mundo_IconoCuadrado","Mundo_IconoTriangulo","Mundo_IconoCirculo","Mundo_IconoGoma","Mundo_IconoPintar","Mundo_IconoLetra","Mundo_IconoVolver","componentes_TransformerComponent","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","selectShapeNameFuncion","setState","rectangulos","state","push","Date","now","active","firstPosX","firstPosY","secondPosX","secondPosY","evt","color","numero","_this$state","componentes_Mundo","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a0d7b7ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Rect } from 'react-konva';\n\nclass Rectangulo extends React.Component {\n\n  render() {\n    return (\n      <Rect\n        name = {this.props.name}\n        x = {this.props.x}\n        y = {this.props.y}\n        width= {this.props.width}\n        height= {this.props.height}\n        fill= {this.props.fill}\n        draggable\n      />\n    );\n  }\n}\n\nexport default Rectangulo;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Circle } from 'react-konva';\n\nclass Circulo extends React.Component {\n\n  render() {\n    return (\n      <Circle\n        name = {this.props.name}\n        x = {this.props.x}\n        y = {this.props.y}\n        radius = {this.props.radius}\n        fill= {this.props.fill}\n        draggable\n      />\n    );\n  }\n}\n\nexport default Circulo;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Text } from 'react-konva';\n\nclass Texto extends React.Component {\n\n  render() {\n    return (\n      <Text\n        name = {this.props.name}\n        x = {this.props.x}\n        y = {this.props.y}\n        fontSize = {30}\n        text = {this.props.texto}\n        fontFamily = {\"Calibri\"}\n        fill= {this.props.fill}\n        draggable\n      />\n    );\n  }\n}\n\nexport default Texto;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Arrow } from 'react-konva';\n\nclass Flecha extends React.Component {\n\n  render() {\n    return (\n      <Arrow\n         points = {this.props.points}\n         pointerLength = {20}\n         pointerWidth = {20}\n         fill = {'black'}\n         stroke = {'black'}\n         tension= {4}\n         draggable\n      />\n    );\n  }\n}\n\nexport default Flecha;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { RegularPolygon } from 'react-konva';\n\nclass Triangulo extends React.Component {\n\n  render() {\n    return (\n      <RegularPolygon\n          x = {190}\n          y = {180}\n          sides =  {3}\n          radius = { 80}\n          fill = {\"red\"}\n          stroke = {\"black\"}\n          strokeWidth =  {4}\n          name = {this.props.name}\n          draggable\n      />\n    );\n  }\n}\n\nexport default Triangulo;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Transformer } from 'react-konva';\n\nclass TransformerComponent extends Component {\n  componentDidMount() {\n    this.checkNode();\n  }\n  componentDidUpdate() {\n  //  this.checkNode();\n    if (this.props.selectedShapeName.trim() !== \"\") {\n      this.checkNode()\n    }else{\n      this.transformer.detach();\n        this.transformer.getLayer().batchDraw();\n    }\n\n   console.log(\"texto\"+ this.props.selectedShapeName);\n  }\n\n  checkNode() {\n    // here we need to manually attach or detach Transformer node\n    const stage = this.transformer.getStage();\n    //const { selectedShapeName } = this.props;\n\n    const selectedShape =  this.props.selectedShapeName;\n    const selectedNode = stage.findOne(\".\"+selectedShape);\n    // do nothing if selected node is already attached\n    if (selectedNode === this.transformer.node()) {\n      return;\n    }\n\n    if (selectedNode) {\n      // attach to another node\n      this.transformer.attachTo(selectedNode);\n    } else {\n      // remove transformer\n      this.transformer.detach();\n    }\n    this.transformer.getLayer().batchDraw();\n  }\n\n  render() {\n    return (\n      <Transformer\n        ref={node => {\n          this.transformer = node;\n        }}\n      />\n    );\n  }\n}\n\nexport default TransformerComponent;\n","import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Rectangulo from './Rectangulo';\nimport Circulo from './Circulo';\nimport Texto from './Texto';\nimport Flecha from './Flecha';\nimport Triangulo from './Triangulo';\nimport { Stage, Layer, Rect, Circle,Text,Image } from 'react-konva';\nimport TransformerComponent from './TransformerComponent';\nimport useImage from 'use-image';\nimport './css/style.css'\n\nconst IconoFlecha = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo40.svg');\n  return <Image image={image} x={580} y={700} width={30} height={30} id={\"flecha\"}/>;\n};\n\nconst IconoLapiz = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo33.svg');\n  return <Image image={image} x={620} y={700} width={30} height={30}/>;\n};\n\nconst IconoLinea = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo39.svg');\n  return <Image image={image} x={660} y={700} width={30} height={30}/>;\n};\n\nconst IconoCuadrado = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo41.svg');\n  return <Image image={image} x={700} y={700} width={30} height={30} id={\"rectangulo\"}/>;\n};\n\nconst IconoTriangulo = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo41.svg');\n  return <Image image={image} x={740} y={700} width={30} height={30} id={\"triangulo\"}/>;\n};\n\nconst IconoCirculo = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo41.svg');\n  return <Image image={image} x={780} y={700} width={30} height={30} id={\"circulo\"}/>;\n};\n\nconst IconoGoma = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo35.svg');\n  return <Image image={image} x={820} y={700} width={30} height={30}/>;\n};\n\nconst IconoPintar = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo36.svg');\n  return <Image image={image} x={860} y={700} width={30} height={30}/>;\n};\n\nconst IconoLetra = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo37.svg');\n  return <Image image={image} x={900} y={700} width={30} height={30} id = {\"texto\"}/>;\n};\n\nconst IconoVolver = () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo38.svg');\n  return <Image image={image} x={940} y={700} width={30} height={30}/>;\n};\n\nconst IconoAvanzar= () => {\n  const [image] = useImage('http://www.rojojaguar.com/Mesadetrabajo38.svg');\n  return <Image image={image} x={980} y={700} width={30} height={30}/>;\n};\n\n\nclass Mundo extends React.Component {\n\n    handleStageMouseDown = e => {\n    // this.props.insertarRectangulo(e);\n  // clicked on stage - cler selection\n  if (this.props.isMakingLine === false){\n  if (e.target === e.target.getStage()) {\n      this.props.selectShapeName('');\n    return;\n  }\n  // clicked on transformer - do nothing\n  // find clicked rect by its name\n  const name = e.target.name();\n\n  if (e.target.name().trim() !== \"\") {\n    const clickedOnTransformer =\n      e.target.getParent().className === \"Transformer\";\n    //  console.log(\"este es el target \"+e.target.fill(\"blue\"));\n    if (this.props.selectedColor !== \"\"){\n      e.target.fill(this.props.selectedColor);\n      this.props.resetColor()\n    }\n    if (clickedOnTransformer) {\n      return;\n    }\n\n    const shapes = [...this.props.rects,...this.props.circulos, ...this.props.textos, ...this.props.flechas, ...this.props.triangulos];\n    //const shapes = [...this.props.rects];\n    const shape = shapes.find(shape => shape.name === name);\n    if (shape) {\n      this.props.selectShapeName(name);\n    } else {\n      this.props.selectShapeName('');\n    }\n    }else{\n\n      if (e.target.id().trim() === \"rectangulo\"){\n         this.props.insertarRectangulo(e);\n      }else if (e.target.id().trim() === \"triangulo\"){\n         this.props.insertarTriangulo(e);\n      }else if (e.target.id().trim() === \"circulo\"){\n        this.props.insertarCirculo(e);\n      }else if(e.target.id().trim() === \"texto\"){\n        this.props.insertarText(e);\n      }\n      else if (e.target.id().trim() === \"flecha\"){\n        this.props.insertarFlecha(true);\n      }\n      else if (e.target.id().trim() === \"red\"){\n        this.props.changeColor(e);\n      }\n      else if (e.target.id().trim() === \"blue\"){\n        this.props.changeColor(e);\n      }\n      else if (e.target.id().trim() === \"black\"){\n        this.props.changeColor(e);\n      }\n      else if (e.target.id().trim() === \"green\"){\n        this.props.changeColor(e);\n      }\n    }\n  }else{\n    const counter =  this.props.countClick + 1;\n\n    this.props.aumentarClick(counter)\n    if (counter === 1){\n      this.props.firstPos(e.target.getStage().getPointerPosition().x,e.target.getStage().getPointerPosition().y);\n    }else if (counter === 2){\n      this.props.secondPos(e.target.getStage().getPointerPosition().x,e.target.getStage().getPointerPosition().y);\n      this.props.aumentarClick(0)\n      this.props.insertarFlecha(false);\n      this.props.insertArrowWithTwoPositions();\n    }\n    console.log(counter);\n  }\n};\n\n  render() {\n      return (\n        <div class=\"paint\">\n        <div class=\"stage\">\n        <Stage width={1600} height={782} onMouseDown = {this.handleStageMouseDown} >\n          <Layer>\n\n\n          {Array.from(this.props.rects).map((rect, i) => (\n            <Rectangulo key={i} {...rect} />\n          ))}\n\n            {Array.from(this.props.circulos).map((cir, i) => (\n              <Circulo key={i} {...cir} />\n            ))}\n\n            {Array.from(this.props.textos).map((txt, i) => (\n              <Texto key={i} {...txt} />\n            ))}\n\n            {this.props.flechas.map((arr, i) => (\n               <Flecha key={i} {...arr} />\n            ))}\n\n            {Array.from(this.props.triangulos).map((tri, i) => (\n              <Triangulo key={i} {...tri} />\n            ))}\n\n            <Circle x={80} y={700} radius={15} fill={\"red\"} id={\"red\"}/>\n            <Circle x={110} y={700} radius={15} fill={\"blue\"} id={\"blue\"}/>\n            <Circle x={140} y={700} radius={15} fill={\"green\"} id={\"green\"}/>\n            <Circle x={170} y={700} radius={15} fill={\"black\"} id={\"black\"}/>\n            <Circle x={200} y={700} radius={15} fill={\"red\"} id={\"red\"}/>\n            <Circle x={230} y={700} radius={15} fill={\"blue\"} id={\"blue\"}/>\n            <Circle x={260} y={700} radius={15} fill={\"green\"} id={\"green\"}/>\n\n            <Circle x={80} y={735} radius={15} fill={\"red\"} id={\"red\"}/>\n            <Circle x={110} y={735} radius={15} fill={\"blue\"} id={\"blue\"}/>\n            <Circle x={140} y={735} radius={15} fill={\"green\"} id={\"green\"}/>\n            <Circle x={170} y={735} radius={15} fill={\"black\"} id={\"black\"}/>\n            <Circle x={200} y={735} radius={15} fill={\"red\"} id={\"red\"}/>\n            <Circle x={230} y={735} radius={15} fill={\"blue\"} id={\"blue\"}/>\n            <Circle x={260} y={735} radius={15} fill={\"green\"} id={\"green\"}/>\n\n\n            <IconoFlecha/>\n            <IconoLapiz/>\n            <IconoLinea/>\n            <IconoCuadrado/>\n            <IconoTriangulo/>\n            <IconoCirculo/>\n            <IconoGoma/>\n            <IconoPintar/>\n            <IconoLetra/>\n            <IconoVolver/>\n            <TransformerComponent\n              selectedShapeName={this.props.selectedShapeName}\n            />\n\n          </Layer>\n        </Stage>\n\n        </div>\n        </div>\n      );\n    };\n}\n\nexport default Mundo;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\n\nimport Mundo from './componentes/Mundo';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        rectangulos: [],\n        circulos: [],\n        textos: [],\n        flechas: [],\n        triangulos: [],\n        isMakingLine:false,\n        countClick:0,\n        firstPosX:0,\n        firstPosY:0,\n        secondPosX:0,\n        secondPosY:0\n      };\n    }\n\n\n  componentDidMount(){\n    this.setState({\n        rectangulos:[{}],\n       circulos : [{\n       }],\n\n       textos : [{\n         name : \"texto1\",\n         x : 150,\n         y : 150,\n         fontSize : 30,\n         texto : \"ttt mundo\",\n         fontFamily : \"Calibri\",\n         fill: \"red\"\n       }],\n       countClick: 0,\n       selectedShapeName: \"\",\n       selectedColor:\"\",\n       isMakingLine:false,\n       firstPosX:0,\n       firstPosY:0,\n       secondPosX:0,\n       secondPosY:0\n    })\n  }\n\n  selectShapeNameFuncion = (name) =>{\n    this.setState({\n      selectedShapeName: name\n    })\n  }\n\ninsertarRectangulo = (e) => {\n    let rectangulos = this.state.rectangulos;\n    rectangulos.push (   {\n                width: 100,\n                height: 200,\n                x: 200,\n                y: 300,\n                fill: 'black',\n                name: `rectangulo${Date.now()}`\n            });\n\n            this.setState({\n              rectangulos\n            })\n}\n\ninsertarTriangulo = (e) => {\n    let triangulos = this.state.triangulos;\n    triangulos.push(  {\n                  x : 190,\n                  y : 180,\n                  sides : 3,\n                  radius :  80,\n                  fill : \"green\",\n                  stroke : \"black\",\n                  strokeWidth : 4,\n                  draggable : true,\n                  name: `triangulo${Date.now()}`\n            });\n\n            this.setState({\n              triangulos\n            })\n}\n\ninsertarFlecha = (active) => {\n  this.setState({\n    isMakingLine: active\n  })\n}\n\ninsertArrowWithTwoPositions =() =>\n{\n  let flechas = this.state.flechas;\n  flechas.push({\n                x : this.state.firstPosX,\n                y : this.state.firstPosY ,\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                pointerLength : 20,\n                pointerWidth : 20,\n                fill : 'black',\n                stroke : 'black',\n                strokeWidth :4,\n                width: 20,\n                height: 20,\n                name: `flechas${Date.now()}`});\n\n\n          this.setState({\n            flechas: flechas\n          })\n\n\n}\n\ninsertarCirculo = (e) => {\n  let circulos = this.state.circulos;\n  circulos.push ({\n                radius: 50,\n                x : e.evt.x,\n                y: e.evt.y,\n                fill: \"red\",\n                name: `circulo${Date.now()}`\n            })\n            this.setState({\n                circulos\n            })\n\n}\n\ninsertarText = (e) => {\n  let textos = this.state.textos;\n  textos.push({\n                x : e.evt.x,\n                y : e.evt.y,\n                fontSize : 35,\n                texto : \"hola\",\n                fontFamily : \"Calibri\",\n                fill: \"green\",\n                name: `texto{Date.now()}`\n            });\n\n            this.setState({\n                textos\n            })\n}\n\nresetColor = () => {\n  this.setState({\n    selectedColor: \"\"\n  })\n}\n\nchangeColor = (color) => {\n  this.setState ({\n    selectedColor: color.target.id()\n  })\n}\n\naumentarClick = (numero) =>{\n  this.setState({\n    countClick:numero\n  })\n}\n\nfirstPos = (x,y) => {\n  this.setState({\n    firstPosX: x,\n    firstPosY: y\n  })\n}\n\nsecondPos = (x,y) => {\n  this.setState({\n    secondPosX: x,\n    secondPosY: y\n  })\n}\n\n  render() {\n    const {\n      selectedColor,\n      selectedShapeName,\n      isMakingLine,\n      rectangulos,\n      circulos,\n      textos,\n      flechas,\n      triangulos,\n      countClick,\n      firstPosX,\n      firstPosY,\n      secondPosX,\n      secondPosY\n    } = this.state\n\n    return (\n        <Mundo\n          firstPosX = {firstPosX}\n          firstPosY = {firstPosY}\n          secondPosX = {secondPosX}\n          secondPosY = {secondPosY}\n          firstPos = {this.firstPos}\n          secondPos = {this.secondPos}\n          selectedColor = {selectedColor}\n          selectedShapeName = {selectedShapeName}\n          rects= { rectangulos }\n          circulos = {circulos}\n          textos = {textos}\n          flechas = {flechas}\n          isMakingLine = {isMakingLine}\n          triangulos = {triangulos}\n          countClick = {countClick}\n          insertArrowWithTwoPositions = {this.insertArrowWithTwoPositions}\n          resetColor = {this.resetColor}\n          insertarText = {this.insertarText}\n          insertarFlecha = {this.insertarFlecha}\n          insertarTriangulo = {this.insertarTriangulo}\n          insertarCirculo = {this.insertarCirculo}\n          insertarRectangulo = { this.insertarRectangulo }\n          selectShapeName = {this.selectShapeNameFuncion}\n          changeColor = {this.changeColor}\n          aumentarClick = {this.aumentarClick}\n        />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}