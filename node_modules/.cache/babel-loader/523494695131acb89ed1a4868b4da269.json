{"ast":null,"code":"import _objectSpread from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/react-paint/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.selectShapeNameFuncion = function (name) {\n      _this.setState({\n        selectedShapeName: name\n      });\n    };\n\n    _this.insertarRectangulo = function (e) {\n      var rectangulos = Object.values(_this.state.rectangulos);\n      rectangulos[\"rect\".concat(Date.now())] = {\n        width: 100,\n        height: 200,\n        x: 200,\n        y: 300,\n        fill: 'black',\n        name: \"rectangulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        rectangulos: rectangulos\n      });\n    };\n\n    _this.insertarTriangulo = function (e) {\n      var triangulos = Object.values(_this.state.triangulos);\n      triangulos[\"triangulo\".concat(Date.now())] = {\n        x: 190,\n        y: 180,\n        sides: 3,\n        radius: 80,\n        fill: \"green\",\n        stroke: \"black\",\n        strokeWidth: 4,\n        draggable: true,\n        name: \"triangulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        triangulos: triangulos\n      });\n    };\n\n    _this.insertarFlecha = function (active) {\n      _this.setState({\n        isMakingLine: active\n      });\n    };\n\n    _this.insertArrowWithTwoPositions = function () {\n      var flechas = Object.values(_this.state.flechas);\n      var saveDate = \"flechas\".concat(Date.now());\n      var flecha = {\n        x: _this.state.firstPosX,\n        y: _this.state.firstPosY,\n        points: [_this.state.firstPosX, _this.state.firstPosY, _this.state.secondPosX, _this.state.secondPosY],\n        pointerLength: 20,\n        pointerWidth: 20,\n        fill: 'black',\n        stroke: 'black',\n        strokeWidth: 4,\n        width: 20,\n        height: 20,\n        name: \"flechas\".concat(Date.now())\n      };\n\n      var list = _this.state.flechas.push(flecha);\n\n      console.log(\"flechas: \" + flechas.length);\n\n      _this.setState({\n        flechas: list\n      });\n    };\n\n    _this.insertarCirculo = function (e) {\n      var circulos = Object.values(_this.state.circulos);\n      circulos[\"circulo{Date.now()}\"] = {\n        radius: 50,\n        x: e.evt.x,\n        y: e.evt.y,\n        fill: \"red\",\n        name: \"circulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        circulos: circulos\n      });\n    };\n\n    _this.insertarText = function (e) {\n      var textos = _objectSpread({}, _this.state.textos);\n\n      textos[\"texto{Date.now()}\"] = {\n        x: e.evt.x,\n        y: e.evt.y,\n        fontSize: 35,\n        text: \"hola\",\n        fontFamily: \"Calibri\",\n        fill: \"green\"\n      };\n\n      _this.setState({\n        textos: textos\n      });\n    };\n\n    _this.resetColor = function () {\n      _this.setState({\n        selectedColor: \"\"\n      });\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        selectedColor: color.target.id()\n      });\n    };\n\n    _this.aumentarClick = function (numero) {\n      _this.setState({\n        countClick: numero\n      });\n    };\n\n    _this.firstPos = function (x, y) {\n      _this.setState({\n        firstPosX: x,\n        firstPosY: y\n      });\n    };\n\n    _this.secondPos = function (x, y) {\n      _this.setState({\n        secondPosX: x,\n        secondPosY: y\n      });\n    };\n\n    _this.state = {\n      rectangulos: [],\n      circulos: [],\n      textos: {},\n      flechas: [],\n      triangulos: [],\n      isMakingLine: false,\n      countClick: 0,\n      firstPosX: 0,\n      firstPosY: 0,\n      secondPosX: 0,\n      secondPosY: 0\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        rectangulos: [{}],\n        circulos: [{}],\n        textos: [{\n          name: \"texto1\",\n          x: 150,\n          y: 150,\n          fontSize: 30,\n          texto: \"ttt mundo\",\n          fontFamily: \"Calibri\",\n          fill: \"red\"\n        }],\n        countClick: 0,\n        selectedShapeName: \"\",\n        selectedColor: \"\",\n        isMakingLine: false,\n        firstPosX: 0,\n        firstPosY: 0,\n        secondPosX: 0,\n        secondPosY: 0\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedColor = _this$state.selectedColor,\n          selectedShapeName = _this$state.selectedShapeName,\n          isMakingLine = _this$state.isMakingLine,\n          rectangulos = _this$state.rectangulos,\n          circulos = _this$state.circulos,\n          textos = _this$state.textos,\n          flechas = _this$state.flechas,\n          triangulos = _this$state.triangulos,\n          countClick = _this$state.countClick,\n          firstPosX = _this$state.firstPosX,\n          firstPosY = _this$state.firstPosY,\n          secondPosX = _this$state.secondPosX,\n          secondPosY = _this$state.secondPosY;\n      return React.createElement(Mundo, {\n        firstPosX: firstPosX,\n        firstPosY: firstPosY,\n        secondPosX: secondPosX,\n        secondPosY: secondPosY,\n        firstPos: this.firstPos,\n        secondPos: this.secondPos,\n        selectedColor: selectedColor,\n        selectedShapeName: selectedShapeName,\n        rects: rectangulos,\n        circulos: circulos,\n        textos: textos,\n        flechas: flechas,\n        isMakingLine: isMakingLine,\n        triangulos: triangulos,\n        countClick: countClick,\n        insertArrowWithTwoPositions: this.insertArrowWithTwoPositions,\n        resetColor: this.resetColor,\n        insertarFlecha: this.insertarFlecha,\n        insertarTriangulo: this.insertarTriangulo,\n        insertarCirculo: this.insertarCirculo,\n        insertarRectangulo: this.insertarRectangulo,\n        selectShapeName: this.selectShapeNameFuncion,\n        changeColor: this.changeColor,\n        aumentarClick: this.aumentarClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/react-paint/src/App.js"],"names":["React","Component","render","Konva","Mundo","App","props","selectShapeNameFuncion","name","setState","selectedShapeName","insertarRectangulo","e","rectangulos","Object","values","state","Date","now","width","height","x","y","fill","insertarTriangulo","triangulos","sides","radius","stroke","strokeWidth","draggable","insertarFlecha","active","isMakingLine","insertArrowWithTwoPositions","flechas","saveDate","flecha","firstPosX","firstPosY","points","secondPosX","secondPosY","pointerLength","pointerWidth","list","push","console","log","length","insertarCirculo","circulos","evt","insertarText","textos","fontSize","text","fontFamily","resetColor","selectedColor","changeColor","color","target","id","aumentarClick","numero","countClick","firstPos","secondPos","texto"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\n\nimport Mundo from './componentes/Mundo';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        rectangulos: [],\n        circulos: [],\n        textos: {},\n        flechas: [],\n        triangulos: [],\n        isMakingLine:false,\n        countClick:0,\n        firstPosX:0,\n        firstPosY:0,\n        secondPosX:0,\n        secondPosY:0\n      };\n    }\n\n\n  componentDidMount(){\n    this.setState({\n        rectangulos:[{}],\n       circulos : [{\n       }],\n       textos : [{\n         name : \"texto1\",\n         x : 150,\n         y : 150,\n         fontSize : 30,\n         texto : \"ttt mundo\",\n         fontFamily : \"Calibri\",\n         fill: \"red\"\n       }],\n       countClick: 0,\n       selectedShapeName: \"\",\n       selectedColor:\"\",\n       isMakingLine:false,\n       firstPosX:0,\n       firstPosY:0,\n       secondPosX:0,\n       secondPosY:0\n    })\n  }\n\n  selectShapeNameFuncion = (name) =>{\n    this.setState({\n      selectedShapeName: name\n    })\n  }\n\ninsertarRectangulo = (e) => {\n    const rectangulos = Object.values(this.state.rectangulos);\n    rectangulos[`rect${Date.now()}`] =   {\n                width: 100,\n                height: 200,\n                x: 200,\n                y: 300,\n                fill: 'black',\n                name: `rectangulo${Date.now()}`\n            };\n\n            this.setState({\n              rectangulos\n            })\n}\n\ninsertarTriangulo = (e) => {\n    const triangulos = Object.values(this.state.triangulos);\n    triangulos[`triangulo${Date.now()}`] =   {\n                  x : 190,\n                  y : 180,\n                  sides : 3,\n                  radius :  80,\n                  fill : \"green\",\n                  stroke : \"black\",\n                  strokeWidth : 4,\n                  draggable : true,\n                  name: `triangulo${Date.now()}`\n            };\n\n            this.setState({\n              triangulos\n            })\n}\n\ninsertarFlecha = (active) => {\n  this.setState({\n    isMakingLine: active\n  })\n}\n\ninsertArrowWithTwoPositions =() =>\n{\n  const flechas = Object.values(this.state.flechas);\n  const saveDate =  `flechas${Date.now()}`;\n\n  const flecha =   {\n                x : this.state.firstPosX,\n                y : this.state.firstPosY ,\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                pointerLength : 20,\n                pointerWidth : 20,\n                fill : 'black',\n                stroke : 'black',\n                strokeWidth :4,\n                width: 20,\n                height: 20,\n                name: `flechas${Date.now()}`\n          };\n          const list = this.state.flechas.push(flecha);\n  console.log(\"flechas: \"+flechas.length)\n          this.setState({\n            flechas: list\n          })\n\n}\n\ninsertarCirculo = (e) => {\n  const circulos = Object.values(this.state.circulos);\n  circulos[`circulo{Date.now()}`] =   {\n                radius: 50,\n                x : e.evt.x,\n                y: e.evt.y,\n                fill: \"red\",\n                name: `circulo${Date.now()}`\n            };\n            this.setState({\n                circulos\n            })\n\n}\n\ninsertarText = (e) => {\n  const textos = {...this.state.textos};\n  textos[`texto{Date.now()}`] =   {\n                x : e.evt.x,\n                y : e.evt.y,\n                fontSize : 35,\n                text : \"hola\",\n                fontFamily : \"Calibri\",\n                fill: \"green\"\n            };\n            this.setState({\n                textos\n            })\n}\n\nresetColor = () => {\n  this.setState({\n    selectedColor: \"\"\n  })\n}\n\nchangeColor = (color) => {\n  this.setState ({\n    selectedColor: color.target.id()\n  })\n}\n\naumentarClick = (numero) =>{\n  this.setState({\n    countClick:numero\n  })\n}\n\nfirstPos = (x,y) => {\n  this.setState({\n    firstPosX: x,\n    firstPosY: y\n  })\n}\n\nsecondPos = (x,y) => {\n  this.setState({\n    secondPosX: x,\n    secondPosY: y\n  })\n}\n\n  render() {\n    const {\n      selectedColor,\n      selectedShapeName,\n      isMakingLine,\n      rectangulos,\n      circulos,\n      textos,\n      flechas,\n      triangulos,\n      countClick,\n      firstPosX,\n      firstPosY,\n      secondPosX,\n      secondPosY\n    } = this.state\n\n    return (\n        <Mundo\n        firstPosX = {firstPosX}\n        firstPosY = {firstPosY}\n        secondPosX = {secondPosX}\n        secondPosY = {secondPosY}\n          firstPos = {this.firstPos}\n          secondPos = {this.secondPos}\n          selectedColor = {selectedColor}\n          selectedShapeName = {selectedShapeName}\n          rects= { rectangulos }\n          circulos = {circulos}\n          textos = {textos}\n          flechas = {flechas}\n          isMakingLine = {isMakingLine}\n          triangulos = {triangulos}\n          countClick = {countClick}\n          insertArrowWithTwoPositions = {this.insertArrowWithTwoPositions}\n          resetColor = {this.resetColor}\n          insertarFlecha = {this.insertarFlecha}\n          insertarTriangulo = {this.insertarTriangulo}\n          insertarCirculo = {this.insertarCirculo}\n          insertarRectangulo = { this.insertarRectangulo }\n          selectShapeName = {this.selectShapeNameFuncion}\n          changeColor = {this.changeColor}\n          aumentarClick = {this.aumentarClick}\n        />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}