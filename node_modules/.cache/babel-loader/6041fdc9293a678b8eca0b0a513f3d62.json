{"ast":null,"code":"import _classCallCheck from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/react-paint/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.selectShapeNameFuncion = function (name) {\n      _this.setState({\n        selectedShapeName: name\n      });\n    };\n\n    _this.objectCreate = function (e) {\n      console.log(\"objecto creado: \" + e.target);\n\n      _this.setState({\n        objectText: e.target\n      });\n    };\n\n    _this.insertarRectangulo = function (e) {\n      var rectangulos = _this.state.rectangulos;\n      rectangulos.push({\n        width: 100,\n        height: 200,\n        x: 200,\n        y: 300,\n        fill: 'black',\n        name: \"rectangulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        rectangulos: rectangulos\n      });\n    };\n\n    _this.insertarTriangulo = function (e) {\n      var triangulos = _this.state.triangulos;\n      triangulos.push({\n        x: 190,\n        y: 180,\n        sides: 3,\n        radius: 80,\n        fill: \"green\",\n        stroke: \"black\",\n        strokeWidth: 4,\n        draggable: true,\n        name: \"triangulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        triangulos: triangulos\n      });\n    };\n\n    _this.insertarFlecha = function (active) {\n      _this.setState({\n        isMakingLine: active\n      });\n    };\n\n    _this.insertArrowWithTwoPositions = function () {\n      var flechas = _this.state.flechas;\n      flechas.push({\n        x: _this.state.firstPosX,\n        y: _this.state.firstPosY,\n        points: [_this.state.firstPosX, _this.state.firstPosY, _this.state.secondPosX, _this.state.secondPosY],\n        pointerLength: 20,\n        pointerWidth: 20,\n        fill: 'black',\n        stroke: 'black',\n        strokeWidth: 4,\n        width: 20,\n        height: 20,\n        name: \"flechas\".concat(Date.now())\n      });\n\n      _this.setState({\n        flechas: flechas\n      });\n    };\n\n    _this.insertarCirculo = function (e) {\n      var circulos = _this.state.circulos;\n      circulos.push({\n        radius: 50,\n        x: e.evt.x,\n        y: e.evt.y,\n        fill: \"red\",\n        name: \"circulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        circulos: circulos\n      });\n    };\n\n    _this.insertarText = function (e) {\n      var textos = _this.state.textos;\n      textos.push({\n        x: e.evt.x,\n        y: e.evt.y,\n        fontSize: 35,\n        texto: \"hola\",\n        fontFamily: \"Calibri\",\n        fill: \"green\",\n        name: \"texto{Date.now()}\"\n      });\n\n      _this.setState({\n        textos: textos\n      });\n    };\n\n    _this.resetColor = function () {\n      _this.setState({\n        selectedColor: \"\"\n      });\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        selectedColor: color.target.id()\n      });\n    };\n\n    _this.aumentarClick = function (numero) {\n      _this.setState({\n        countClick: numero\n      });\n    };\n\n    _this.firstPos = function (x, y) {\n      _this.setState({\n        firstPosX: x,\n        firstPosY: y\n      });\n    };\n\n    _this.secondPos = function (x, y) {\n      _this.setState({\n        secondPosX: x,\n        secondPosY: y\n      });\n    };\n\n    _this.setTool = function (val) {\n      _this.setState({\n        tool: val\n      });\n    };\n\n    _this.toggleDrawing = function (val) {\n      _this.setState({\n        isDrawing: val\n      });\n    };\n\n    _this.setLines = function (val) {\n      _this.setState({\n        lines: val\n      });\n    };\n\n    _this.getIsDrawingLine = function (val) {\n      _this.setState({\n        isDrawLine: val\n      });\n    };\n\n    _this.state = {\n      rectangulos: [],\n      circulos: [],\n      textos: [],\n      flechas: [],\n      triangulos: [],\n      isMakingLine: false,\n      countClick: 0,\n      firstPosX: 0,\n      firstPosY: 0,\n      secondPosX: 0,\n      secondPosY: 0,\n      objectText: null,\n      tool: \"pen\",\n      isDrawing: false,\n      lines: [],\n      isDrawLine: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        rectangulos: [{}],\n        circulos: [{}],\n        textos: [{}],\n        countClick: 0,\n        selectedShapeName: \"\",\n        selectedColor: \"\",\n        isMakingLine: false,\n        firstPosX: 0,\n        firstPosY: 0,\n        secondPosX: 0,\n        secondPosY: 0,\n        objectText: null,\n        tool: \"pen\",\n        isDrawing: false,\n        lines: [],\n        isDrawLine: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedColor = _this$state.selectedColor,\n          selectedShapeName = _this$state.selectedShapeName,\n          isMakingLine = _this$state.isMakingLine,\n          rectangulos = _this$state.rectangulos,\n          circulos = _this$state.circulos,\n          textos = _this$state.textos,\n          flechas = _this$state.flechas,\n          triangulos = _this$state.triangulos,\n          countClick = _this$state.countClick,\n          firstPosX = _this$state.firstPosX,\n          firstPosY = _this$state.firstPosY,\n          secondPosX = _this$state.secondPosX,\n          secondPosY = _this$state.secondPosY,\n          objectText = _this$state.objectText,\n          isPaint = _this$state.isPaint,\n          lastPointerPosition = _this$state.lastPointerPosition,\n          mode = _this$state.mode,\n          tool = _this$state.tool,\n          isDrawing = _this$state.isDrawing,\n          lines = _this$state.lines,\n          isDrawLine = _this$state.isDrawLine;\n      return React.createElement(Mundo, {\n        isDrawLine: isDrawLine,\n        tool: tool,\n        isDrawing: isDrawing,\n        lines: lines,\n        isPaint: isPaint,\n        lastPointerPosition: lastPointerPosition,\n        mode: mode,\n        firstPosX: firstPosX,\n        firstPosY: firstPosY,\n        secondPosX: secondPosX,\n        secondPosY: secondPosY,\n        selectedColor: selectedColor,\n        selectedShapeName: selectedShapeName,\n        rects: rectangulos,\n        circulos: circulos,\n        textos: textos,\n        flechas: flechas,\n        isMakingLine: isMakingLine,\n        triangulos: triangulos,\n        countClick: countClick,\n        objectText: objectText,\n        firstPos: this.firstPos,\n        secondPos: this.secondPos,\n        objectCreate: this.objectCreate,\n        insertArrowWithTwoPositions: this.insertArrowWithTwoPositions,\n        resetColor: this.resetColor,\n        insertarText: this.insertarText,\n        insertarFlecha: this.insertarFlecha,\n        insertarTriangulo: this.insertarTriangulo,\n        insertarCirculo: this.insertarCirculo,\n        insertarRectangulo: this.insertarRectangulo,\n        selectShapeName: this.selectShapeNameFuncion,\n        changeColor: this.changeColor,\n        aumentarClick: this.aumentarClick,\n        setTool: this.setTool,\n        toggleDrawing: this.toggleDrawing,\n        setLines: this.setLines,\n        getIsDrawingLine: this.getIsDrawingLine,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/react-paint/src/App.js"],"names":["React","Component","render","Konva","Mundo","App","props","selectShapeNameFuncion","name","setState","selectedShapeName","objectCreate","e","console","log","target","objectText","insertarRectangulo","rectangulos","state","push","width","height","x","y","fill","Date","now","insertarTriangulo","triangulos","sides","radius","stroke","strokeWidth","draggable","insertarFlecha","active","isMakingLine","insertArrowWithTwoPositions","flechas","firstPosX","firstPosY","points","secondPosX","secondPosY","pointerLength","pointerWidth","insertarCirculo","circulos","evt","insertarText","textos","fontSize","texto","fontFamily","resetColor","selectedColor","changeColor","color","id","aumentarClick","numero","countClick","firstPos","secondPos","setTool","val","tool","toggleDrawing","isDrawing","setLines","lines","getIsDrawingLine","isDrawLine","isPaint","lastPointerPosition","mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        rectangulos: [],\n        circulos: [],\n        textos: [],\n        flechas: [],\n        triangulos: [],\n        isMakingLine:false,\n        countClick:0,\n        firstPosX:0,\n        firstPosY:0,\n        secondPosX:0,\n        secondPosY:0,\n        objectText: null,\n        tool : \"pen\",\n        isDrawing : false,\n        lines : [],\n        isDrawLine: false\n      };\n    }\n\n\n  componentDidMount(){\n    this.setState({\n        rectangulos:[{}],\n       circulos : [{\n       }],\n\n       textos : [{\n       }],\n       countClick: 0,\n       selectedShapeName: \"\",\n       selectedColor:\"\",\n       isMakingLine:false,\n       firstPosX:0,\n       firstPosY:0,\n       secondPosX:0,\n       secondPosY:0,\n       objectText: null,\n       tool : \"pen\",\n       isDrawing : false,\n       lines : [],\n       isDrawLine: false\n    })\n  }\n\n  selectShapeNameFuncion = (name) =>{\n\n    this.setState({\n      selectedShapeName: name\n    })\n  }\n\nobjectCreate =(e) =>{\n  console.log(\"objecto creado: \"+ e.target);\n  this.setState({\n    objectText: e.target\n  })\n}\n\ninsertarRectangulo = (e) => {\n    let rectangulos = this.state.rectangulos;\n    rectangulos.push (   {\n                width: 100,\n                height: 200,\n                x: 200,\n                y: 300,\n                fill: 'black',\n                name: `rectangulo${Date.now()}`\n            });\n\n            this.setState({\n              rectangulos\n            })\n}\n\ninsertarTriangulo = (e) => {\n    let triangulos = this.state.triangulos;\n    triangulos.push(  {\n                  x : 190,\n                  y : 180,\n                  sides : 3,\n                  radius :  80,\n                  fill : \"green\",\n                  stroke : \"black\",\n                  strokeWidth : 4,\n                  draggable : true,\n                  name: `triangulo${Date.now()}`\n            });\n\n            this.setState({\n              triangulos\n            })\n}\n\ninsertarFlecha = (active) => {\n  this.setState({\n    isMakingLine: active\n  })\n}\n\ninsertArrowWithTwoPositions =() =>\n{\n  let flechas = this.state.flechas;\n  flechas.push({\n                x : this.state.firstPosX,\n                y : this.state.firstPosY ,\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                pointerLength : 20,\n                pointerWidth : 20,\n                fill : 'black',\n                stroke : 'black',\n                strokeWidth :4,\n                width: 20,\n                height: 20,\n                name: `flechas${Date.now()}`});\n\n\n          this.setState({\n            flechas: flechas\n          })\n\n\n}\n\ninsertarCirculo = (e) => {\n  let circulos = this.state.circulos;\n  circulos.push ({\n                radius: 50,\n                x : e.evt.x,\n                y: e.evt.y,\n                fill: \"red\",\n                name: `circulo${Date.now()}`\n            })\n            this.setState({\n                circulos\n            })\n\n}\n\ninsertarText = (e) => {\n  let textos = this.state.textos;\n  textos.push({\n                x : e.evt.x,\n                y : e.evt.y,\n                fontSize : 35,\n                texto : \"hola\",\n                fontFamily : \"Calibri\",\n                fill: \"green\",\n                name: `texto{Date.now()}`\n            });\n\n            this.setState({\n                textos\n            })\n}\n\nresetColor = () => {\n  this.setState({\n    selectedColor: \"\"\n  })\n}\n\nchangeColor = (color) => {\n  this.setState ({\n    selectedColor: color.target.id()\n  })\n}\n\naumentarClick = (numero) =>{\n  this.setState({\n    countClick:numero\n  })\n}\n\nfirstPos = (x,y) => {\n  this.setState({\n    firstPosX: x,\n    firstPosY: y\n  })\n}\n\nsecondPos = (x,y) => {\n  this.setState({\n    secondPosX: x,\n    secondPosY: y\n  })\n}\n\nsetTool = (val) => {\n  this.setState({\n    tool:val\n  })\n}\n\ntoggleDrawing = (val) => {\n  this.setState({\n    isDrawing:val\n  })\n}\n\nsetLines = (val) => {\n  this.setState({\n    lines:val\n  })\n}\n\ngetIsDrawingLine = (val) => {\n  this.setState({\n    isDrawLine:val\n  })\n}\n\n  render() {\n    const {\n      selectedColor,\n      selectedShapeName,\n      isMakingLine,\n      rectangulos,\n      circulos,\n      textos,\n      flechas,\n      triangulos,\n      countClick,\n      firstPosX,\n      firstPosY,\n      secondPosX,\n      secondPosY,\n      objectText,\n      isPaint,\n      lastPointerPosition,\n      mode,\n      tool,\n      isDrawing,\n      lines,\n      isDrawLine\n    } = this.state\n\n    return (\n        <Mundo\n          isDrawLine = {isDrawLine}\n          tool = {tool}\n          isDrawing = {isDrawing}\n          lines = {lines}\n          isPaint = {isPaint}\n          lastPointerPosition = {lastPointerPosition}\n          mode = {mode}\n          firstPosX = {firstPosX}\n          firstPosY = {firstPosY}\n          secondPosX = {secondPosX}\n          secondPosY = {secondPosY}\n          selectedColor = {selectedColor}\n          selectedShapeName = {selectedShapeName}\n          rects= { rectangulos }\n          circulos = {circulos}\n          textos = {textos}\n          flechas = {flechas}\n          isMakingLine = {isMakingLine}\n          triangulos = {triangulos}\n          countClick = {countClick}\n          objectText = {objectText}\n          firstPos = {this.firstPos}\n          secondPos = {this.secondPos}\n          objectCreate = {this.objectCreate}\n          insertArrowWithTwoPositions = {this.insertArrowWithTwoPositions}\n          resetColor = {this.resetColor}\n          insertarText = {this.insertarText}\n          insertarFlecha = {this.insertarFlecha}\n          insertarTriangulo = {this.insertarTriangulo}\n          insertarCirculo = {this.insertarCirculo}\n          insertarRectangulo = { this.insertarRectangulo }\n          selectShapeName = {this.selectShapeNameFuncion}\n          changeColor = {this.changeColor}\n          aumentarClick = {this.aumentarClick}\n          setTool = {this.setTool}\n          toggleDrawing = {this.toggleDrawing}\n          setLines = {this.setLines}\n          getIsDrawingLine = {this.getIsDrawingLine}\n        />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}