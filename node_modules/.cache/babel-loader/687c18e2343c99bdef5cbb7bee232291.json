{"ast":null,"code":"import _toConsumableArray from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/konvastest/src/componentes/Mundo.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Rectangulo from './Rectangulo';\nimport Circulo from './Circulo';\nimport Texto from './Texto';\nimport Flecha from './Flecha';\nimport Triangulo from './Triangulo';\nimport { Stage, Layer, Rect, Circle, Text } from 'react-konva';\nimport TransformerComponent from './TransformerComponent';\n\nvar Mundo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mundo, _React$Component);\n\n  function Mundo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mundo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mundo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleStageMouseDown = function (e) {\n      // this.props.insertarRectangulo(e);\n      // clicked on stage - cler selection\n      if (e.target === e.target.getStage()) {\n        _this.props.selectShapeName('');\n\n        return;\n      } // clicked on transformer - do nothing\n      // find clicked rect by its name\n\n\n      var name = e.target.name();\n\n      if (e.target.name().trim() !== \"\") {\n        var clickedOnTransformer = e.target.getParent().className === \"Transformer\";\n        console.log(\"este es el target \" + e.target.fill());\n\n        if (clickedOnTransformer) {\n          return;\n        }\n\n        var shapes = [].concat(_toConsumableArray(_this.props.rects), _toConsumableArray(_this.props.circulos), _toConsumableArray(_this.props.textos), _toConsumableArray(_this.props.flechas), _toConsumableArray(_this.props.triangulos)); //const shapes = [...this.props.rects];\n\n        var shape = shapes.find(function (shape) {\n          return shape.name === name;\n        });\n\n        if (shape) {\n          _this.props.selectShapeName(name);\n        } else {\n          _this.props.selectShapeName('');\n        }\n      } else {\n        if (e.target.id().trim() === \"rectangulo\") {\n          _this.props.insertarRectangulo(e);\n        } else if (e.target.id().trim() === \"triangulo\") {\n          _this.props.insertarTriangulo(e);\n        } else if (e.target.id().trim() === \"circulo\") {\n          _this.props.insertarCirculo(e);\n        } else if (e.target.id().trim() === \"red\") {\n          _this.props.changeColor(e);\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Mundo, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Stage, {\n        width: window.innerWidth,\n        height: window.innerHeight,\n        onMouseDown: this.handleStageMouseDown,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, Array.from(this.props.rects).map(function (rect, i) {\n        return React.createElement(Rectangulo, Object.assign({\n          key: i\n        }, rect, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }));\n      }), Array.from(this.props.circulos).map(function (cir, i) {\n        return React.createElement(Circulo, Object.assign({\n          key: i\n        }, cir, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }));\n      }), Array.from(this.props.textos).map(function (txt, i) {\n        return React.createElement(Texto, Object.assign({\n          key: i\n        }, txt, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }));\n      }), Array.from(this.props.flechas).map(function (arr, i) {\n        return React.createElement(Flecha, Object.assign({\n          key: i\n        }, arr, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        }));\n      }), Array.from(this.props.triangulos).map(function (tri, i) {\n        return React.createElement(Triangulo, Object.assign({\n          key: i\n        }, tri, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }));\n      }), React.createElement(Circle, {\n        x: 500,\n        y: 600,\n        radius: 30,\n        fill: \"black\",\n        id: \"rectangulo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        x: 600,\n        y: 600,\n        radius: 30,\n        fill: \"black\",\n        id: \"circulo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        x: 700,\n        y: 600,\n        radius: 30,\n        fill: \"black\",\n        id: \"triangulo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Circle, {\n        x: 900,\n        y: 600,\n        radius: 30,\n        fill: \"red\",\n        id: \"red\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(TransformerComponent, {\n        selectedShapeName: this.props.selectedShapeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Mundo;\n}(React.Component);\n\nexport default Mundo;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/konvastest/src/componentes/Mundo.js"],"names":["React","Component","render","Rectangulo","Circulo","Texto","Flecha","Triangulo","Stage","Layer","Rect","Circle","Text","TransformerComponent","Mundo","handleStageMouseDown","e","target","getStage","props","selectShapeName","name","trim","clickedOnTransformer","getParent","className","console","log","fill","shapes","rects","circulos","textos","flechas","triangulos","shape","find","id","insertarRectangulo","insertarTriangulo","insertarCirculo","changeColor","window","innerWidth","innerHeight","Array","from","map","rect","i","cir","txt","arr","tri","selectedShapeName"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport Rectangulo from './Rectangulo';\nimport Circulo from './Circulo';\nimport Texto from './Texto';\nimport Flecha from './Flecha';\nimport Triangulo from './Triangulo';\nimport { Stage, Layer, Rect, Circle,Text } from 'react-konva';\nimport TransformerComponent from './TransformerComponent';\n\nclass Mundo extends React.Component {\n\n\n    handleStageMouseDown = e => {\n    // this.props.insertarRectangulo(e);\n  // clicked on stage - cler selection\n  if (e.target === e.target.getStage()) {\n      this.props.selectShapeName('');\n    return;\n  }\n  // clicked on transformer - do nothing\n  // find clicked rect by its name\n  const name = e.target.name();\n\n  if (e.target.name().trim() !== \"\") {\n    const clickedOnTransformer =\n      e.target.getParent().className === \"Transformer\";\n      console.log(\"este es el target \"+e.target.fill());\n    if (clickedOnTransformer) {\n      return;\n    }\n\n    const shapes = [...this.props.rects,...this.props.circulos, ...this.props.textos, ...this.props.flechas, ...this.props.triangulos];\n    //const shapes = [...this.props.rects];\n    const shape = shapes.find(shape => shape.name === name);\n    if (shape) {\n      this.props.selectShapeName(name);\n    } else {\n      this.props.selectShapeName('');\n    }\n    }else{\n\n      if (e.target.id().trim() === \"rectangulo\"){\n         this.props.insertarRectangulo(e);\n      }else if (e.target.id().trim() === \"triangulo\"){\n         this.props.insertarTriangulo(e);\n      }else if (e.target.id().trim() === \"circulo\"){\n        this.props.insertarCirculo(e);\n      }else if (e.target.id().trim() === \"red\"){\n        this.props.changeColor(e);\n      }\n    }\n};\n\n  render() {\n      return (\n        <Stage width={window.innerWidth} height={window.innerHeight} onMouseDown = {this.handleStageMouseDown} >\n          <Layer>\n\n\n          {Array.from(this.props.rects).map((rect, i) => (\n            <Rectangulo key={i} {...rect} />\n          ))}\n\n            {Array.from(this.props.circulos).map((cir, i) => (\n              <Circulo key={i} {...cir} />\n            ))}\n\n            {Array.from(this.props.textos).map((txt, i) => (\n              <Texto key={i} {...txt} />\n            ))}\n\n            {Array.from(this.props.flechas).map((arr, i) => (\n               <Flecha key={i} {...arr} />\n            ))}\n\n            {Array.from(this.props.triangulos).map((tri, i) => (\n              <Triangulo key={i} {...tri} />\n            ))}\n\n\n            <Circle x={500} y={600} radius={30} fill={\"black\"} id={\"rectangulo\"}/>\n            <Circle x={600} y={600} radius={30} fill={\"black\"} id={\"circulo\"}/>\n            <Circle x={700} y={600} radius={30} fill={\"black\"} id={\"triangulo\"}/>\n\n            <Circle x={900} y={600} radius={30} fill={\"red\"} id={\"red\"}/>\n            <TransformerComponent\n              selectedShapeName={this.props.selectedShapeName}\n            />\n          </Layer>\n        </Stage>\n      );\n    };\n}\n\nexport default Mundo;\n"]},"metadata":{},"sourceType":"module"}