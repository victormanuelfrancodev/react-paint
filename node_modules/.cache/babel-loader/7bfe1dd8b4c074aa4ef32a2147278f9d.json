{"ast":null,"code":"import _objectSpread from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/react-paint/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      rectangulos: [],\n      circulos: [],\n      textos: {},\n      flechas: [],\n      triangulos: [],\n      isMakingLine: false,\n      countClick: 0,\n      firstPosX: 0,\n      firstPosY: 0,\n      secondPosX: 0,\n      secondPosY: 0\n    };\n\n    _this.selectShapeNameFuncion = function (name) {\n      _this.setState({\n        selectedShapeName: name\n      });\n    };\n\n    _this.insertarRectangulo = function (e) {\n      var rectangulos = Object.values(_this.state.rectangulos);\n      rectangulos[\"rect\".concat(Date.now())] = {\n        width: 100,\n        height: 200,\n        x: 200,\n        y: 300,\n        fill: 'black',\n        name: \"rectangulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        rectangulos: rectangulos\n      });\n    };\n\n    _this.insertarTriangulo = function (e) {\n      var triangulos = Object.values(_this.state.triangulos);\n      triangulos[\"triangulo\".concat(Date.now())] = {\n        x: 190,\n        y: 180,\n        sides: 3,\n        radius: 80,\n        fill: \"green\",\n        stroke: \"black\",\n        strokeWidth: 4,\n        draggable: true,\n        name: \"triangulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        triangulos: triangulos\n      });\n    };\n\n    _this.insertarFlecha = function (active) {\n      _this.setState({\n        isMakingLine: active\n      });\n    };\n\n    _this.insertArrowWithTwoPositions = function () {\n      var flechas = Object.values(_this.state.flechas);\n      flechas[\"flechas{Date.now()}\"] = {\n        x: _this.state.firstPosX,\n        y: _this.state.firstPosY,\n        points: [_this.state.firstPosX, _this.state.firstPosY, _this.state.secondPosX, _this.state.secondPosY],\n        pointerLength: 20,\n        pointerWidth: 20,\n        fill: 'black',\n        stroke: 'black',\n        strokeWidth: 4,\n        width: 200,\n        height: 200,\n        name: \"triangulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        flechas: flechas\n      });\n    };\n\n    _this.insertarCirculo = function (e) {\n      var circulos = Object.values(_this.state.circulos);\n      circulos[\"circulo{Date.now()}\"] = {\n        radius: 50,\n        x: e.evt.x,\n        y: e.evt.y,\n        fill: \"red\",\n        name: \"circulo\".concat(Date.now())\n      };\n\n      _this.setState({\n        circulos: circulos\n      });\n    };\n\n    _this.insertarText = function (e) {\n      var textos = _objectSpread({}, _this.state.textos);\n\n      textos[\"texto{Date.now()}\"] = {\n        x: e.evt.x,\n        y: e.evt.y,\n        fontSize: 35,\n        text: \"hola\",\n        fontFamily: \"Calibri\",\n        fill: \"green\"\n      };\n\n      _this.setState({\n        textos: textos\n      });\n    };\n\n    _this.resetColor = function () {\n      _this.setState({\n        selectedColor: \"\"\n      });\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        selectedColor: color.target.id()\n      });\n    };\n\n    _this.aumentarClick = function (numero) {\n      _this.setState({\n        countClick: numero\n      });\n    };\n\n    _this.firstPos = function (x, y) {\n      _this.setState({\n        firstPosX: x,\n        firstPosY: y\n      });\n    };\n\n    _this.secondPos = function (x, y) {\n      _this.setState({\n        secondPosX: x,\n        secondPosY: y\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        rectangulos: [{}],\n        circulos: [{}],\n        textos: [{\n          name: \"texto1\",\n          x: 150,\n          y: 150,\n          fontSize: 30,\n          texto: \"ttt mundo\",\n          fontFamily: \"Calibri\",\n          fill: \"red\"\n        }],\n        flechas: [{\n          x: 500,\n          y: 500,\n          points: [0, 0, 100 / 2, 200 / 2],\n          pointerLength: 20,\n          pointerWidth: 20,\n          fill: 'black',\n          stroke: 'black',\n          strokeWidth: 4,\n          width: 200,\n          height: 200\n        }],\n        countClick: 0,\n        selectedShapeName: \"\",\n        selectedColor: \"\",\n        isMakingLine: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedColor = _this$state.selectedColor,\n          selectedShapeName = _this$state.selectedShapeName,\n          isMakingLine = _this$state.isMakingLine,\n          rectangulos = _this$state.rectangulos,\n          circulos = _this$state.circulos,\n          textos = _this$state.textos,\n          flechas = _this$state.flechas,\n          triangulos = _this$state.triangulos,\n          countClick = _this$state.countClick;\n      return React.createElement(Mundo, {\n        firstPos: this.firstPos,\n        secondPos: this.secondPos,\n        selectedColor: selectedColor,\n        selectedShapeName: selectedShapeName,\n        rects: rectangulos,\n        circulos: circulos,\n        textos: textos,\n        flechas: flechas,\n        isMakingLine: isMakingLine,\n        triangulos: triangulos,\n        countClick: countClick,\n        insertArrowWithTwoPositions: this.insertArrowWithTwoPositions,\n        resetColor: this.resetColor,\n        insertarFlecha: this.insertarFlecha,\n        insertarTriangulo: this.insertarTriangulo,\n        insertarCirculo: this.insertarCirculo,\n        insertarRectangulo: this.insertarRectangulo,\n        selectShapeName: this.selectShapeNameFuncion,\n        changeColor: this.changeColor,\n        aumentarClick: this.aumentarClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/react-paint/src/App.js"],"names":["React","Component","render","Konva","Mundo","App","state","rectangulos","circulos","textos","flechas","triangulos","isMakingLine","countClick","firstPosX","firstPosY","secondPosX","secondPosY","selectShapeNameFuncion","name","setState","selectedShapeName","insertarRectangulo","e","Object","values","Date","now","width","height","x","y","fill","insertarTriangulo","sides","radius","stroke","strokeWidth","draggable","insertarFlecha","active","insertArrowWithTwoPositions","points","pointerLength","pointerWidth","insertarCirculo","evt","insertarText","fontSize","text","fontFamily","resetColor","selectedColor","changeColor","color","target","id","aumentarClick","numero","firstPos","secondPos","texto"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\n\nimport Mundo from './componentes/Mundo';\n\nclass App extends Component {\n\n  state = {\n    rectangulos: [],\n    circulos: [],\n    textos: {},\n    flechas: [],\n    triangulos: [],\n    isMakingLine:false,\n    countClick:0,\n    firstPosX:0,\n    firstPosY:0,\n    secondPosX:0,\n    secondPosY:0\n  }\n\n  componentDidMount(){\n    this.setState({\n        rectangulos:[{}],\n       circulos : [{\n       }],\n       textos : [{\n         name : \"texto1\",\n         x : 150,\n         y : 150,\n         fontSize : 30,\n         texto : \"ttt mundo\",\n         fontFamily : \"Calibri\",\n         fill: \"red\"\n       }],\n       flechas: [{\n         x : 500,\n         y : 500,\n         points : [0,0, 100 / 2, 200 / 2],\n         pointerLength : 20,\n         pointerWidth : 20,\n         fill : 'black',\n         stroke : 'black',\n         strokeWidth :4,\n         width: 200,\n         height: 200\n       }],\n       countClick: 0,\n       selectedShapeName: \"\",\n       selectedColor:\"\",\n       isMakingLine:false\n    })\n  }\n\n  selectShapeNameFuncion = (name) =>{\n    this.setState({\n      selectedShapeName: name\n    })\n  }\n\ninsertarRectangulo = (e) => {\n    const rectangulos = Object.values(this.state.rectangulos);\n    rectangulos[`rect${Date.now()}`] =   {\n                width: 100,\n                height: 200,\n                x: 200,\n                y: 300,\n                fill: 'black',\n                name: `rectangulo${Date.now()}`\n            };\n\n            this.setState({\n              rectangulos\n            })\n}\n\ninsertarTriangulo = (e) => {\n    const triangulos = Object.values(this.state.triangulos);\n    triangulos[`triangulo${Date.now()}`] =   {\n                  x : 190,\n                  y : 180,\n                  sides : 3,\n                  radius :  80,\n                  fill : \"green\",\n                  stroke : \"black\",\n                  strokeWidth : 4,\n                  draggable : true,\n                  name: `triangulo${Date.now()}`\n            };\n\n            this.setState({\n              triangulos\n            })\n}\n\ninsertarFlecha = (active) => {\n  this.setState({\n    isMakingLine: active\n  })\n}\n\ninsertArrowWithTwoPositions =() =>\n{\n  const flechas = Object.values(this.state.flechas);\n  flechas[`flechas{Date.now()}`] =   {\n                x : this.state.firstPosX,\n                y : this.state.firstPosY ,\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                pointerLength : 20,\n                pointerWidth : 20,\n                fill : 'black',\n                stroke : 'black',\n                strokeWidth :4,\n                width: 200,\n                height: 200,\n                name: `triangulo${Date.now()}`\n          };\n\n          this.setState({\n            flechas\n          })\n}\n\ninsertarCirculo = (e) => {\n  const circulos = Object.values(this.state.circulos);\n  circulos[`circulo{Date.now()}`] =   {\n                radius: 50,\n                x : e.evt.x,\n                y: e.evt.y,\n                fill: \"red\",\n                name: `circulo${Date.now()}`\n            };\n            this.setState({\n                circulos\n            })\n\n}\n\ninsertarText = (e) => {\n  const textos = {...this.state.textos};\n  textos[`texto{Date.now()}`] =   {\n                x : e.evt.x,\n                y : e.evt.y,\n                fontSize : 35,\n                text : \"hola\",\n                fontFamily : \"Calibri\",\n                fill: \"green\"\n            };\n            this.setState({\n                textos\n            })\n}\n\nresetColor = () => {\n  this.setState({\n    selectedColor: \"\"\n  })\n}\n\nchangeColor = (color) => {\n  this.setState ({\n    selectedColor: color.target.id()\n  })\n}\n\naumentarClick = (numero) =>{\n  this.setState({\n    countClick:numero\n  })\n}\n\nfirstPos = (x,y) => {\n  this.setState({\n    firstPosX: x,\n    firstPosY: y\n  })\n}\n\nsecondPos = (x,y) => {\n  this.setState({\n    secondPosX: x,\n    secondPosY: y\n  })\n}\n\n  render() {\n    const {\n      selectedColor,\n      selectedShapeName,\n      isMakingLine,\n      rectangulos,\n      circulos,\n      textos,\n      flechas,\n      triangulos,\n      countClick\n    } = this.state\n\n    return (\n        <Mundo\n          firstPos = {this.firstPos}\n          secondPos = {this.secondPos}\n          selectedColor = {selectedColor}\n          selectedShapeName = {selectedShapeName}\n          rects= { rectangulos }\n          circulos = {circulos}\n          textos = {textos}\n          flechas = {flechas}\n          isMakingLine = {isMakingLine}\n          triangulos = {triangulos}\n          countClick = {countClick}\n          insertArrowWithTwoPositions = {this.insertArrowWithTwoPositions}\n          resetColor = {this.resetColor}\n          insertarFlecha = {this.insertarFlecha}\n          insertarTriangulo = {this.insertarTriangulo}\n          insertarCirculo = {this.insertarCirculo}\n          insertarRectangulo = { this.insertarRectangulo }\n          selectShapeName = {this.selectShapeNameFuncion}\n          changeColor = {this.changeColor}\n          aumentarClick = {this.aumentarClick}\n        />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}