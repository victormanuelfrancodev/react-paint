{"ast":null,"code":"import _classCallCheck from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/konvastest/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/konvastest/src/componentes/Rectangulo.js\";\nimport React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Transformer } from 'react-konva';\n\nvar Rectangulo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Rectangulo, _React$Component);\n\n  function Rectangulo() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Rectangulo);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Rectangulo)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.changeSize = function () {\n      // to() is a method of `Konva.Node` instances\n      _this.rect.to({\n        scaleX: Math.random() + 0.8,\n        scaleY: Math.random() + 0.8,\n        duration: 0.2\n      });\n    };\n\n    _this.handleTransform = function () {\n      console.log(\"transformed\"); // we can read attrs here and send them to store\n    };\n\n    return _this;\n  }\n\n  _createClass(Rectangulo, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var stage = this.transformer.getStage();\n      var rectangle = stage.findOne(\".rectangulo\");\n      this.transformer.attachTo(rectangle);\n      this.transformer.getLayer().batchDraw();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(Rect, {\n        name: \"rectangulo\",\n        ref: function ref(node) {\n          _this2.rect = node;\n          _this2.transformer = node;\n        },\n        x: this.props.rectangulo.x,\n        y: this.props.rectangulo.y,\n        width: this.props.rectangulo.width,\n        height: this.props.rectangulo.height,\n        fill: this.props.rectangulo.fill,\n        onTransform: this.handleTransform,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return Rectangulo;\n}(React.Component);\n\nexport default Rectangulo;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/konvastest/src/componentes/Rectangulo.js"],"names":["React","Component","render","Stage","Layer","Rect","Transformer","Rectangulo","changeSize","rect","to","scaleX","Math","random","scaleY","duration","handleTransform","console","log","stage","transformer","getStage","rectangle","findOne","attachTo","getLayer","batchDraw","node","props","rectangulo","x","y","width","height","fill"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,KAAhB,EAAuBC,IAAvB,EAA6BC,WAA7B,QAAgD,aAAhD;;IAEMC,U;;;;;;;;;;;;;;;;;;UACJC,U,GAAa,YAAM;AACjB;AACA,YAAKC,IAAL,CAAUC,EAAV,CAAa;AACXC,QAAAA,MAAM,EAAEC,IAAI,CAACC,MAAL,KAAgB,GADb;AAEXC,QAAAA,MAAM,EAAEF,IAAI,CAACC,MAAL,KAAgB,GAFb;AAGXE,QAAAA,QAAQ,EAAE;AAHC,OAAb;AAKD,K;;UAEDC,e,GAAkB,YAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EADqB,CAErB;AACD,K;;;;;;;wCAEiB;AACjB,UAAMC,KAAK,GAAG,KAAKC,WAAL,CAAiBC,QAAjB,EAAd;AACA,UAAMC,SAAS,GAAGH,KAAK,CAACI,OAAN,CAAc,aAAd,CAAlB;AACA,WAAKH,WAAL,CAAiBI,QAAjB,CAA0BF,SAA1B;AACA,WAAKF,WAAL,CAAiBK,QAAjB,GAA4BC,SAA5B;AACD;;;6BACQ;AAAA;;AACP,aAEE,oBAAC,IAAD;AACC,QAAA,IAAI,EAAG,YADR;AAEE,QAAA,GAAG,EAAE,aAAAC,IAAI,EAAI;AACX,UAAA,MAAI,CAAClB,IAAL,GAAYkB,IAAZ;AACA,UAAA,MAAI,CAACP,WAAL,GAAmBO,IAAnB;AACD,SALH;AAME,QAAA,CAAC,EAAI,KAAKC,KAAL,CAAWC,UAAX,CAAsBC,CAN7B;AAOE,QAAA,CAAC,EAAI,KAAKF,KAAL,CAAWC,UAAX,CAAsBE,CAP7B;AAQE,QAAA,KAAK,EAAG,KAAKH,KAAL,CAAWC,UAAX,CAAsBG,KARhC;AASE,QAAA,MAAM,EAAG,KAAKJ,KAAL,CAAWC,UAAX,CAAsBI,MATjC;AAUE,QAAA,IAAI,EAAG,KAAKL,KAAL,CAAWC,UAAX,CAAsBK,IAV/B;AAWE,QAAA,WAAW,EAAK,KAAKlB,eAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF;AAkBD;;;;EAxCsBhB,KAAK,CAACC,S;;AA2C/B,eAAeM,UAAf","sourcesContent":["import React, { Component } from 'react';\nimport { render } from 'react-dom';\nimport { Stage, Layer, Rect, Transformer } from 'react-konva';\n\nclass Rectangulo extends React.Component {\n  changeSize = () => {\n    // to() is a method of `Konva.Node` instances\n    this.rect.to({\n      scaleX: Math.random() + 0.8,\n      scaleY: Math.random() + 0.8,\n      duration: 0.2\n    });\n  };\n\n  handleTransform = () => {\n     console.log(\"transformed\");\n     // we can read attrs here and send them to store\n   };\n\n  componentDidMount(){\n    const stage = this.transformer.getStage();\n    const rectangle = stage.findOne(\".rectangulo\");\n    this.transformer.attachTo(rectangle);\n    this.transformer.getLayer().batchDraw();\n  }\n  render() {\n    return (\n\n      <Rect\n       name = \"rectangulo\"\n        ref={node => {\n          this.rect = node;\n          this.transformer = node;\n        }}\n        x = {this.props.rectangulo.x}\n        y = {this.props.rectangulo.y}\n        width= {this.props.rectangulo.width}\n        height= {this.props.rectangulo.height}\n        fill= {this.props.rectangulo.fill}\n        onTransform = { this.handleTransform }\n      />\n\n\n    );\n  }\n}\n\nexport default Rectangulo;\n"]},"metadata":{},"sourceType":"module"}