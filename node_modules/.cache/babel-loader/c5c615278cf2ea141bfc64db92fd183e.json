{"ast":null,"code":"import _classCallCheck from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/victor/Documents/GitHub/react-paint/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/victor/Documents/GitHub/react-paint/src/App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.setTextObject = function (val) {\n      _this.setState({\n        textoDialogo: \"Instrucciones: \" + val\n      });\n    };\n\n    _this.selectShapeNameFuncion = function (name) {\n      _this.setState({\n        selectedShapeName: name\n      });\n    };\n\n    _this.objectCreate = function (e) {\n      _this.setState({\n        objectText: e.target\n      });\n    };\n\n    _this.insertarFlechaSinPiquito = function (e) {\n      var flechasSinPiquito = _this.state.flechasSinPiquito;\n      flechasSinPiquito.push({\n        points: [_this.state.firstPosX, _this.state.firstPosY, _this.state.secondPosX, _this.state.secondPosY],\n        stroke: 'red',\n        strokeWidth: 15,\n        lineCap: 'round',\n        lineJoin: 'round',\n        name: \"flechasSinPiquito\".concat(Date.now())\n      });\n\n      _this.setState({\n        flechasSinPiquito: flechasSinPiquito\n      });\n    };\n\n    _this.insertarRectangulo = function (e) {\n      var rectangulos = _this.state.rectangulos;\n      rectangulos.push({\n        width: 100,\n        height: 200,\n        x: 400,\n        y: 300,\n        fill: 'black',\n        name: \"rectangulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        rectangulos: rectangulos\n      });\n    };\n\n    _this.insertarTriangulo = function (e) {\n      var triangulos = _this.state.triangulos;\n      triangulos.push({\n        x: 190,\n        y: 180,\n        sides: 3,\n        radius: 80,\n        fill: \"green\",\n        stroke: \"black\",\n        strokeWidth: 4,\n        draggable: true,\n        name: \"triangulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        triangulos: triangulos\n      });\n    };\n\n    _this.insertarFlecha = function (active) {\n      _this.setState({\n        isMakingLine: active\n      });\n    };\n\n    _this.setInsertarFlechaSinPiquito = function (active) {\n      _this.setState({\n        isMakingLineSinPiquito: active\n      });\n    };\n\n    _this.insertArrowWithTwoPositions = function () {\n      var flechas = _this.state.flechas;\n      flechas.push({\n        x: _this.state.firstPosX,\n        y: _this.state.firstPosY,\n        points: [_this.state.firstPosX, _this.state.firstPosY, _this.state.secondPosX, _this.state.secondPosY],\n        pointerLength: 20,\n        pointerWidth: 20,\n        fill: 'black',\n        stroke: 'black',\n        strokeWidth: 4,\n        width: 20,\n        height: 20,\n        name: \"flechas\".concat(Date.now())\n      });\n\n      _this.setState({\n        flechas: flechas\n      });\n    };\n\n    _this.insertarCirculo = function (e) {\n      var circulos = _this.state.circulos;\n      circulos.push({\n        radius: 50,\n        x: e.evt.x,\n        y: e.evt.y,\n        fill: \"red\",\n        name: \"circulo\".concat(Date.now())\n      });\n\n      _this.setState({\n        circulos: circulos\n      });\n    };\n\n    _this.insertarText = function (e) {\n      var textos = _this.state.textos;\n      textos.push({\n        x: e.evt.x,\n        y: e.evt.y,\n        fontSize: 35,\n        texto: \"hola\",\n        fontFamily: \"Calibri\",\n        fill: \"green\",\n        name: \"texto{Date.now()}\"\n      });\n\n      _this.setState({\n        textos: textos\n      });\n    };\n\n    _this.resetColor = function () {\n      _this.setState({\n        selectedColor: \"\"\n      });\n    };\n\n    _this.changeColor = function (color) {\n      _this.setState({\n        selectedColor: color.target.id()\n      });\n    };\n\n    _this.aumentarClick = function (numero) {\n      _this.setState({\n        countClick: numero\n      });\n    };\n\n    _this.firstPos = function (x, y) {\n      _this.setState({\n        firstPosX: x,\n        firstPosY: y\n      });\n    };\n\n    _this.secondPos = function (x, y) {\n      _this.setState({\n        secondPosX: x,\n        secondPosY: y\n      });\n    };\n\n    _this.setTool = function (val) {\n      _this.setState({\n        tool: val\n      });\n    };\n\n    _this.toggleDrawing = function (val) {\n      _this.setState({\n        isDrawing: val\n      });\n    };\n\n    _this.setLines = function (val) {\n      _this.setState({\n        lines: val\n      });\n    };\n\n    _this.getIsDrawingLine = function (val) {\n      _this.setState({\n        isDrawLine: val\n      });\n    };\n\n    _this.setColorBackground = function (val) {\n      _this.setState({\n        isColorBackground: val\n      });\n    };\n\n    _this.state = {\n      textoDialogo: \"\",\n      rectangulos: [],\n      circulos: [],\n      textos: [],\n      flechas: [],\n      flechasSinPiquito: [],\n      triangulos: [],\n      isMakingLine: false,\n      isMakingLineSinPiquito: false,\n      countClick: 0,\n      firstPosX: 0,\n      firstPosY: 0,\n      secondPosX: 0,\n      secondPosY: 0,\n      objectText: null,\n      tool: \"pen\",\n      isDrawing: false,\n      lines: [],\n      isDrawLine: false,\n      colorBackground: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.setState({\n        textoSeleccion: \"\",\n        textoObject: null,\n        rectangulos: [{}],\n        circulos: [{}],\n        textos: [{}],\n        flechasSinPiquito: [{}],\n        countClick: 0,\n        selectedShapeName: \"\",\n        selectedColor: \"\",\n        isMakingLine: false,\n        isMakingLineSinPiquito: false,\n        firstPosX: 0,\n        firstPosY: 0,\n        secondPosX: 0,\n        secondPosY: 0,\n        objectText: null,\n        tool: \"pen\",\n        isDrawing: false,\n        lines: [],\n        isDrawLine: false,\n        isColorBackground: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedColor = _this$state.selectedColor,\n          selectedShapeName = _this$state.selectedShapeName,\n          isMakingLine = _this$state.isMakingLine,\n          rectangulos = _this$state.rectangulos,\n          circulos = _this$state.circulos,\n          textos = _this$state.textos,\n          flechas = _this$state.flechas,\n          triangulos = _this$state.triangulos,\n          countClick = _this$state.countClick,\n          firstPosX = _this$state.firstPosX,\n          firstPosY = _this$state.firstPosY,\n          secondPosX = _this$state.secondPosX,\n          secondPosY = _this$state.secondPosY,\n          objectText = _this$state.objectText,\n          isPaint = _this$state.isPaint,\n          lastPointerPosition = _this$state.lastPointerPosition,\n          mode = _this$state.mode,\n          tool = _this$state.tool,\n          isDrawing = _this$state.isDrawing,\n          lines = _this$state.lines,\n          isDrawLine = _this$state.isDrawLine,\n          isMakingLineSinPiquito = _this$state.isMakingLineSinPiquito,\n          flechasSinPiquito = _this$state.flechasSinPiquito,\n          isColorBackground = _this$state.isColorBackground,\n          textoDialogo = _this$state.textoDialogo;\n      return React.createElement(Mundo, {\n        textoDialogo: textoDialogo,\n        isColorBackground: isColorBackground,\n        isMakingLineSinPiquito: isMakingLineSinPiquito,\n        isDrawLine: isDrawLine,\n        tool: tool,\n        flechasSinPiquito: flechasSinPiquito,\n        isDrawing: isDrawing,\n        lines: lines,\n        isPaint: isPaint,\n        lastPointerPosition: lastPointerPosition,\n        mode: mode,\n        firstPosX: firstPosX,\n        firstPosY: firstPosY,\n        secondPosX: secondPosX,\n        secondPosY: secondPosY,\n        selectedColor: selectedColor,\n        selectedShapeName: selectedShapeName,\n        rects: rectangulos,\n        circulos: circulos,\n        textos: textos,\n        flechas: flechas,\n        isMakingLine: isMakingLine,\n        triangulos: triangulos,\n        countClick: countClick,\n        objectText: objectText,\n        firstPos: this.firstPos,\n        secondPos: this.secondPos,\n        objectCreate: this.objectCreate,\n        insertArrowWithTwoPositions: this.insertArrowWithTwoPositions,\n        resetColor: this.resetColor,\n        insertarFlechaSinPiquito: this.insertarFlechaSinPiquito,\n        insertarText: this.insertarText,\n        insertarFlecha: this.insertarFlecha,\n        setInsertarFlechaSinPiquito: this.setInsertarFlechaSinPiquito,\n        insertarTriangulo: this.insertarTriangulo,\n        insertarCirculo: this.insertarCirculo,\n        insertarRectangulo: this.insertarRectangulo,\n        selectShapeName: this.selectShapeNameFuncion,\n        changeColor: this.changeColor,\n        aumentarClick: this.aumentarClick,\n        setTool: this.setTool,\n        toggleDrawing: this.toggleDrawing,\n        setLines: this.setLines,\n        getIsDrawingLine: this.getIsDrawingLine,\n        setColorBackground: this.setColorBackground,\n        setTextObject: this.setTextObject,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      });\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/victor/Documents/GitHub/react-paint/src/App.js"],"names":["React","Component","render","Konva","Mundo","App","props","setTextObject","val","setState","textoDialogo","selectShapeNameFuncion","name","selectedShapeName","objectCreate","e","objectText","target","insertarFlechaSinPiquito","flechasSinPiquito","state","push","points","firstPosX","firstPosY","secondPosX","secondPosY","stroke","strokeWidth","lineCap","lineJoin","Date","now","insertarRectangulo","rectangulos","width","height","x","y","fill","insertarTriangulo","triangulos","sides","radius","draggable","insertarFlecha","active","isMakingLine","setInsertarFlechaSinPiquito","isMakingLineSinPiquito","insertArrowWithTwoPositions","flechas","pointerLength","pointerWidth","insertarCirculo","circulos","evt","insertarText","textos","fontSize","texto","fontFamily","resetColor","selectedColor","changeColor","color","id","aumentarClick","numero","countClick","firstPos","secondPos","setTool","tool","toggleDrawing","isDrawing","setLines","lines","getIsDrawingLine","isDrawLine","setColorBackground","isColorBackground","colorBackground","textoSeleccion","textoObject","isPaint","lastPointerPosition","mode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { render } from 'react-dom';\nimport Konva from 'konva';\nimport Mundo from './componentes/Mundo';\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n\n      this.state = {\n        textoDialogo:\"\",\n        rectangulos: [],\n        circulos: [],\n        textos: [],\n        flechas: [],\n        flechasSinPiquito:[],\n        triangulos: [],\n        isMakingLine:false,\n        isMakingLineSinPiquito:false,\n        countClick:0,\n        firstPosX:0,\n        firstPosY:0,\n        secondPosX:0,\n        secondPosY:0,\n        objectText: null,\n        tool : \"pen\",\n        isDrawing : false,\n        lines : [],\n        isDrawLine: false,\n        colorBackground:\"\"\n      };\n    }\n\n\n  componentDidMount(){\n    this.setState({\n      textoSeleccion:\"\",\n      textoObject:null,\n      rectangulos:[{}],\n       circulos : [{\n       }],\n       textos : [{\n       }],\n       flechasSinPiquito:[{}],\n       countClick: 0,\n       selectedShapeName: \"\",\n       selectedColor:\"\",\n       isMakingLine:false,\n       isMakingLineSinPiquito:false,\n       firstPosX:0,\n       firstPosY:0,\n       secondPosX:0,\n       secondPosY:0,\n       objectText: null,\n       tool : \"pen\",\n       isDrawing : false,\n       lines : [],\n       isDrawLine: false,\n       isColorBackground:false\n    })\n  }\n\nsetTextObject = (val) => {\n  this.setState({\n    textoDialogo: \"Instrucciones: \"+val\n  })\n}\n\n  selectShapeNameFuncion = (name) =>{\n\n    this.setState({\n      selectedShapeName: name\n    })\n  }\n\nobjectCreate =(e) =>{\n  this.setState({\n    objectText: e.target\n  })\n}\n\ninsertarFlechaSinPiquito = (e) =>{\n\n  let flechasSinPiquito = this.state.flechasSinPiquito;\n  flechasSinPiquito.push({\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                stroke: 'red',\n                strokeWidth: 15,\n                lineCap: 'round',\n                lineJoin: 'round',\n                 name: `flechasSinPiquito${Date.now()}`});\n          this.setState({\n            flechasSinPiquito: flechasSinPiquito\n          })\n}\n\ninsertarRectangulo = (e) => {\n    let rectangulos = this.state.rectangulos;\n    rectangulos.push (   {\n                width: 100,\n                height: 200,\n                x: 400,\n                y: 300,\n                fill: 'black',\n                name: `rectangulo${Date.now()}`\n            });\n\n            this.setState({\n              rectangulos\n            })\n}\n\ninsertarTriangulo = (e) => {\n    let triangulos = this.state.triangulos;\n    triangulos.push(  {\n                  x : 190,\n                  y : 180,\n                  sides : 3,\n                  radius :  80,\n                  fill : \"green\",\n                  stroke : \"black\",\n                  strokeWidth : 4,\n                  draggable : true,\n                  name: `triangulo${Date.now()}`\n            });\n\n            this.setState({\n              triangulos\n            })\n}\n\ninsertarFlecha = (active) => {\n  this.setState({\n    isMakingLine: active\n  })\n}\n\nsetInsertarFlechaSinPiquito = (active) =>{\n  this.setState({\n    isMakingLineSinPiquito: active\n  })\n}\n\ninsertArrowWithTwoPositions =() =>\n{\n  let flechas = this.state.flechas;\n  flechas.push({\n                x : this.state.firstPosX,\n                y : this.state.firstPosY ,\n                points : [this.state.firstPosX,this.state.firstPosY , this.state.secondPosX,this.state.secondPosY],\n                pointerLength : 20,\n                pointerWidth : 20,\n                fill : 'black',\n                stroke : 'black',\n                strokeWidth :4,\n                width: 20,\n                height: 20,\n                name: `flechas${Date.now()}`});\n          this.setState({\n            flechas: flechas\n          })\n}\n\ninsertarCirculo = (e) => {\n  let circulos = this.state.circulos;\n  circulos.push ({\n                radius: 50,\n                x : e.evt.x,\n                y: e.evt.y,\n                fill: \"red\",\n                name: `circulo${Date.now()}`\n            })\n            this.setState({\n                circulos\n            })\n\n}\n\ninsertarText = (e) => {\n  let textos = this.state.textos;\n  textos.push({\n                x : e.evt.x,\n                y : e.evt.y,\n                fontSize : 35,\n                texto : \"hola\",\n                fontFamily : \"Calibri\",\n                fill: \"green\",\n                name: `texto{Date.now()}`\n            });\n\n            this.setState({\n                textos\n            })\n}\n\nresetColor = () => {\n  this.setState({\n    selectedColor: \"\"\n  })\n}\n\nchangeColor = (color) => {\n  this.setState ({\n    selectedColor: color.target.id()\n  })\n}\n\naumentarClick = (numero) =>{\n  this.setState({\n    countClick:numero\n  })\n}\n\nfirstPos = (x,y) => {\n  this.setState({\n    firstPosX: x,\n    firstPosY: y\n  })\n}\n\nsecondPos = (x,y) => {\n  this.setState({\n    secondPosX: x,\n    secondPosY: y\n  })\n}\n\nsetTool = (val) => {\n  this.setState({\n    tool:val\n  })\n}\n\ntoggleDrawing = (val) => {\n  this.setState({\n    isDrawing:val\n  })\n}\n\nsetLines = (val) => {\n  this.setState({\n    lines:val\n  })\n}\n\ngetIsDrawingLine = (val) => {\n  this.setState({\n    isDrawLine:val\n  })\n}\n\nsetColorBackground =(val) =>{\n  this.setState({\n    isColorBackground:val\n  })\n}\n\n\n  render() {\n    const {\n      selectedColor,\n      selectedShapeName,\n      isMakingLine,\n      rectangulos,\n      circulos,\n      textos,\n      flechas,\n      triangulos,\n      countClick,\n      firstPosX,\n      firstPosY,\n      secondPosX,\n      secondPosY,\n      objectText,\n      isPaint,\n      lastPointerPosition,\n      mode,\n      tool,\n      isDrawing,\n      lines,\n      isDrawLine,\n      isMakingLineSinPiquito,\n      flechasSinPiquito,\n      isColorBackground,\n      textoDialogo\n    } = this.state\n\n    return (\n        <Mundo\n        textoDialogo = {textoDialogo}\n         isColorBackground = {isColorBackground}\n         isMakingLineSinPiquito= {isMakingLineSinPiquito}\n          isDrawLine = {isDrawLine}\n          tool = {tool}\n          flechasSinPiquito= {flechasSinPiquito}\n          isDrawing = {isDrawing}\n          lines = {lines}\n          isPaint = {isPaint}\n          lastPointerPosition = {lastPointerPosition}\n          mode = {mode}\n          firstPosX = {firstPosX}\n          firstPosY = {firstPosY}\n          secondPosX = {secondPosX}\n          secondPosY = {secondPosY}\n          selectedColor = {selectedColor}\n          selectedShapeName = {selectedShapeName}\n          rects= { rectangulos }\n          circulos = {circulos}\n          textos = {textos}\n          flechas = {flechas}\n          isMakingLine = {isMakingLine}\n          triangulos = {triangulos}\n          countClick = {countClick}\n          objectText = {objectText}\n          firstPos = {this.firstPos}\n          secondPos = {this.secondPos}\n          objectCreate = {this.objectCreate}\n          insertArrowWithTwoPositions = {this.insertArrowWithTwoPositions}\n          resetColor = {this.resetColor}\n          insertarFlechaSinPiquito = {this.insertarFlechaSinPiquito}\n          insertarText = {this.insertarText}\n          insertarFlecha = {this.insertarFlecha}\n          setInsertarFlechaSinPiquito = {this.setInsertarFlechaSinPiquito}\n          insertarTriangulo = {this.insertarTriangulo}\n          insertarCirculo = {this.insertarCirculo}\n          insertarRectangulo = { this.insertarRectangulo }\n          selectShapeName = {this.selectShapeNameFuncion}\n          changeColor = {this.changeColor}\n          aumentarClick = {this.aumentarClick}\n          setTool = {this.setTool}\n          toggleDrawing = {this.toggleDrawing}\n          setLines = {this.setLines}\n          getIsDrawingLine = {this.getIsDrawingLine}\n          setColorBackground ={this.setColorBackground}\n          setTextObject = {this.setTextObject}\n        />\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}